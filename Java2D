//    https://www.hackerrank.com/challenges/java-2d-array/problem


import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<List<Integer>> arr = new ArrayList<>();

        for (int i = 0; i < 6; i++) {
            String[] arrRowTempItems = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

            List<Integer> arrRowItems = new ArrayList<>();

            for (int j = 0; j < 6; j++) {
                int arrItem = Integer.parseInt(arrRowTempItems[j]);
                arrRowItems.add(arrItem);
            }

            arr.add(arrRowItems);
        }

        bufferedReader.close();
        
        //here my code
        int maxSum = Integer.MIN_VALUE;
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            int sum = calculateHourglassSum(arr, i, j);
            if (sum > maxSum) {
                maxSum = sum;
            }
        }
    }
    System.out.println(maxSum);
    }
    
    private static int calculateHourglassSum(List<List<Integer>> arr, int row, int col) {
    int sum = 0;
    sum += arr.get(row).get(col) + arr.get(row).get(col + 1) + arr.get(row).get(col + 2);
    sum += arr.get(row + 1).get(col + 1);
    sum += arr.get(row + 2).get(col) + arr.get(row + 2).get(col + 1) + arr.get(row + 2).get(col + 2);
    return sum;
}
}
